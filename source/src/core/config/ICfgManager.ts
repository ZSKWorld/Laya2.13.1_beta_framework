/**The script is automatically generated by BatMain.bat , please do not modify */

type CfgMapData<T> = ReadonlyAll<{ [P in keyof T]: T[P] }[keyof T]>;
interface CfgExtension<T> {
	forEach(callbackfn: (value: CfgMapData<T>, index: number, array: CfgMapData<T>[]) => void, thisArg?: any): void;
	filter(predicate: (value: CfgMapData<T>, index: number, array: CfgMapData<T>[]) => boolean, thisArg?: any): CfgMapData<T>[];
	find(predicate: (value: CfgMapData<T>, index: number, array: CfgMapData<T>[]) => boolean, thisArg?: any): CfgMapData<T>;
	every(predicate: (value: CfgMapData<T>, index: number, array: CfgMapData<T>[]) => boolean, thisArg?: any): boolean;
	findIndex(predicate: (value: CfgMapData<T>, index: number, obj: CfgMapData<T>[]) => boolean, thisArg?: any): number;
	includes(searchElement: CfgMapData<T>, fromIndex?: number): boolean;
	indexOf(searchElement: CfgMapData<T>, fromIndex?: number): number;
	lastIndexOf(searchElement: CfgMapData<T>, fromIndex?: number): number;
	map<U>(callbackfn: (value: CfgMapData<T>, index: number, array: CfgMapData<T>[]) => U, thisArg?: any): U[];
	reduce<U>(callbackfn: (previousValue: U, currentValue: CfgMapData<T>, currentIndex: number, array: CfgMapData<T>[]) => U, initialValue: U): U;
	slice(start?: number, end?: number): CfgMapData<T>[];
	some(predicate: (value: CfgMapData<T>, index: number, array: CfgMapData<T>[]) => boolean, thisArg?: any): boolean;
}
type CfgData<T> = ReadonlyAll<T> & CfgExtension<T> & { [key: string]: CfgMapData<T> };

declare interface ICfgManager {
	/** 关卡 */
	readonly Level: CfgData<CfgLevel>;
	/** 副本 */
	readonly Copy: CfgData<CfgCopy>;
	/** 秘境 */
	readonly Secret: CfgData<CfgSecret>;
	/** Boss */
	readonly Boss: CfgData<CfgBoss>;
	/** 采集 */
	readonly Gather: CfgData<CfgGather>;
	/** 怪物 */
	readonly Enemy: CfgData<CfgEnemy>;
	/** 装备 */
	readonly Equipment: CfgData<CfgEquipment>;
	/** 装备加成 */
	readonly EquipmentAddition: CfgData<CfgEquipmentAddition>;
	/** 宝石 */
	readonly Gem: CfgData<CfgGem>;
	/** 道具 */
	readonly Props: CfgData<CfgProps>;
	/** 材料 */
	readonly Material: CfgData<CfgMaterial>;
	/** 食物 */
	readonly Food: CfgData<CfgFood>;
	/** 技能书 */
	readonly SkillBook: CfgData<CfgSkillBook>;
	/** 心法书 */
	readonly XinFaBook: CfgData<CfgXinFaBook>;
	/** 固定文本 */
	readonly Lang: CfgData<CfgLang>;
	/** 物品 */
	readonly Item: CfgData<CfgItem>;
	/** 境界 */
	readonly JingJie: CfgData<CfgJingJie>;
	/** 常量 */
	readonly Const: CfgData<CfgConst>;
	/** 称号 */
	readonly Title: CfgData<CfgTitle>;
	/** 门派 */
	readonly Sect: CfgData<CfgSect>;
	/** 商店 */
	readonly Shop: CfgData<CfgShop>;
	/** 颜色 */
	readonly Color: CfgData<CfgColor>;
	/** 错误码 */
	readonly Error: CfgData<CfgError>;

}
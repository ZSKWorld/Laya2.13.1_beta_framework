syntax = "proto3";

package pk;

import "poker.share.proto";

option go_package = ".;protocol";

service Lobby {
  rpc CreateNickname(ReqCreateNickname) returns (ResEmpty);
  rpc ModifyNickname(ReqModifyNickname) returns (ResEmpty);

  // 修改头像
  rpc ModifyAvatarId(ReqModifyAvatarId) returns (ResEmpty);
  // 修改称号
  rpc ModifyTitleId(ReqModifyTitleId) returns (ResEmpty);
  // 修改头像框
  rpc ModifyFrameId(ReqModifyFrameId) returns (ResEmpty);
  rpc SaveSkinGroup(ReqSaveSkinGroup) returns (ResSaveSkinGroup);
  rpc ChangeUsedSkinGroup(ReqChangeUsedSkinGroup) returns (ResChangeUsedSkinGroup);
  rpc ChangeMainCharacter(ReqChangeMainCharacter) returns (ResChangeMainCharacter);
  rpc MakeCraft(ReqMakeCraft) returns (ResEmpty);
  rpc FetchItemIdMap(ReqEmpty) returns (ResFetchItemIdMap);
  rpc DebugButton(ReqEmpty) returns (ResEmpty);
  rpc FetchAccountBrief(ReqFetchAccountBrief) returns (ResFetchAccountBrief);
  rpc AddFriendRequest(ReqAddFriendRequest) returns (ResEmpty);
  rpc ApplyFriendRequest(ReqApplyFriendRequest) returns (ResApplyFriendRequest);
  rpc RemoveFriend(ReqRemoveFriend) returns (ResEmpty);
  rpc QueryGame(ReqEmpty) returns (ResQueryGame);
  rpc AuthGame(ReqEmpty) returns (ResAuthGame);
  rpc FetchMailList(ReqEmpty) returns (ResFetchMailList);
  rpc FetchMailDetail(ReqFetchMailDetail) returns (ResFetchMailDetail);
  rpc ReadMail(ReqReadMail) returns (ResEmpty);
  rpc RecvMailAttachment(ReqRecvMailAttachment) returns (ResRecvMailAttachment);
  rpc DeleteMail(ReqDeleteMail) returns (ResEmpty);
  rpc FetchDailyTaskList(ReqEmpty) returns (ResFetchDailyTaskList);
  rpc ReceiveDailyTaskReward(ReqReceiveDailyTaskReward) returns(ResReceiveDailyTaskReward);
  rpc ReceiveSosCoin(ReqReceiveSosCoin) returns (ResReceiveSosCoin);
  rpc ReadAnnouncement(ReqReadAnnouncement) returns (ResEmpty);
  rpc FetchAnnouncementList(ReqEmpty) returns (ResFetchAnnouncementList);
  rpc BuyFromShop(ReqBuyFromShop) returns (ResBuyFromShop);
  rpc ExchangeFromShop(ReqExchangeFromShop) returns (ResExchangeFromShop);
  rpc FetchLeaderboard(ReqFetchLeaderboard) returns (ResFetchLeaderboard);
  rpc FetchFriendState(ReqFetchFriendState) returns (ResFetchFriendState);
  rpc DeleteSkinGroup(ReqDeleteSkinGroup) returns (ResDeleteSkinGroup);
  rpc ReceiveCharacterLevelRewards(ReqReceiveCharacterLevelRewards) returns (ResReceiveCharacterLevelRewards);
  rpc FetchGameDevShuffles(ReqEmpty) returns (ResFetchGameDevShuffles);

  // 获取可抽取的卡池列表
  rpc FetchActiveChest(ReqFetchActiveChest) returns (ResFetchActiveChest);
  // 获取宝箱信息
  rpc FetchChest(ReqFetchChest) returns (ResFetchChest);
  // 开启宝箱
  rpc OpenChest(ReqOpenChest) returns (ResOpenChest);

  rpc FetchGiftBoxRewards(ReqFetchGiftBoxRewards) returns (ResFetchGiftBoxRewards);
  rpc OpenGiftBox(ReqOpenGiftBox) returns (ResOpenGiftBox);

  rpc FetchMatchStat(ReqFetchMatchStat) returns (ResFetchMatchStat);
  rpc ReceiveSuiteReward(ReqReceiveSuiteReward) returns (ResReceiveSuiteReward);

  // 请求个人赛季信息
  rpc FetchSeasonInfo(ReqFetchSeasonInfo) returns (ResFetchSeasonInfo);
  // 领取赛季奖励
  rpc ReceiveSeasonReward(ReqReceiveSeasonReward) returns (ResReceiveSeasonReward);
  // 确认新赛季
  rpc ConfirmSeason(ReqConfirmSeason) returns (ResConfirmSeason);

  // 牌谱近期列表
  rpc FetchRecentGameRecordList(ReqRecentGameRecordList) returns (ResRecentGameRecordList);
  // 牌谱收藏列表
  rpc FetchFavoriteGameRecordList(ReqFavoriteGameRecordList) returns (ResFavoriteGameRecordList);
  // 查看牌谱具体数据
  rpc FetchGameRecordDetail(ReqGameRecordDetail) returns (ResGameRecordDetail);
  // 增加收藏牌谱
  rpc AddFavoriteGameRecord(ReqAddFavoriteGameRecord) returns (ResEmpty);
  // 取消收藏牌谱
  rpc RemoveFavoriteGameRecord(ReqDeleteFavoriteGameRecord) returns (ResEmpty);
  // 分享牌谱
  rpc ShareGameRecord(ReqShareGameRecord) returns (ResEmpty);

  rpc FetchOBToken(ReqFetchOBToken) returns (ResFetchOBToken);
  rpc FetchGameLiveList(ReqFetchGameLiveList) returns(ResFetchGameLiveList);
  // 开始观战，通知后端进行了观战
  rpc Observe(ReqObserve) returns (ResEmpty);

  rpc UserComplain(ReqUserComplain) returns (ResEmpty);

  rpc FetchClientValue(ReqFetchClientValue) returns (ResFetchClientValue);
  rpc SetClientValue(ReqSetClientValue) returns (ResEmpty);
  rpc DelClientValue(ReqDelClientValue) returns (ResEmpty);

  // 领取成就奖励
  rpc ReceiveAchievementReward(ReqReceiveAchievementReward) returns (ResReceiveAchievementReward);
  // 领取成就等级奖励
  rpc ReceiveAchievementLevelReward(ReqReceiveAchievementLevelReward) returns (ResReceiveAchievementLevelReward);

  // 礼品码
  rpc ReceiveGiftCodeReward(ReqReceiveGiftCodeReward) returns (ResReceiveGiftCodeReward);

  // 某角色某语音进行了播放，前端通知后端听了某角色某语音
  rpc PlayCharacterVoice(ReqPlayCharacterVoice) returns (ResEmpty);

  // 头像图片使用记录
  rpc RecordFetchHeadImage(ReqRecordFetchHeadImage) returns (ResRecordFetchHeadImage);
  // 头半身图片使用记录
  rpc RecordFetchBustImage(ReqRecordFetchBustImage) returns (ResRecordFetchBustImage);

// 更换个人资料背景
  rpc ModifyProfileBackground(ReqModifyProfileBackground) returns (ResEmpty);
  // 成就查看权限设置
  rpc ModifyAchievementPermission(ReqModifyAchievementPermission) returns (ResEmpty);
  // 查看某人全部成就
  rpc FetchAccountAllAchievement(ReqFetchAccountAllAchievement) returns (ResFetchAccountAllAchievement);
  // 点赞
  rpc Upvote(ReqUpvote) returns (ResEmpty);
  // 保存装扮
  rpc SaveDecoration(ReqSaveDecoration) returns (ResEmpty);
  // 更新赛季
  rpc UpdateSeason(ReqUpdateSeason) returns (ResEmpty);
  // 获取服务器时间
  rpc FetchServerTime(ReqFetchServerTime) returns (ResFetchServerTime);
  // 领取vip奖励
  rpc ReceiveVipReward(ReqReceiveVipReward) returns (ResReceiveVipReward);
  // 获取玩家留言区内容
  rpc FetchAccountComment(ReqFetchAccountComment) returns (ResFetchAccountComment);
  // 修改留言权限
  rpc ModifyCommentPermission(ReqModifyCommentPermission) returns (ResEmpty);
  // 添加留言
  rpc AddComment(ReqAddComment) returns (ResEmpty);
  // 删除留言
  rpc DelComment(ReqDelComment) returns (ResEmpty);
  // 保存快捷短语
  rpc SaveQuickPhrase(ReqSaveQuickPhrase) returns (ResEmpty);
  // 删除快捷短语
  rpc DelQuickPhrase(ReqDelQuickPhrase) returns (ResEmpty);
  // 领取月卡奖励
  rpc ReceiveMonthTicket(ReqEmpty) returns (ResEmpty);
  // 领取战令奖励
  rpc ReceiveBattlePassReward(ReqReceiveBattlePassReward) returns (ResReceiveBattlePassReward);
  // 完成战令任务
  rpc ReceiveBattlePassTaskReward(ReqReceiveBattlePassTaskReward) returns (ResReceiveBattlePassTaskReward);
  // 领取免费礼包
  rpc ReceiveFreePackage(ReqReceiveFreePackage) returns (ResReceiveFreePackage);
  // 邮箱绑定
  rpc BindMailEmail(ReqBindMailEmail) returns (ResBindMailEmail);
  rpc BindMail(ReqBindMail) returns (ResEmpty);
  //请求查看玩法说明
  rpc ReadGuide(ReqReadGuide) returns (ResEmpty);
  // 屏蔽表情(仅作为记录成就的接口，实际无效果)
  rpc ShieldEmoji(ReqEmpty) returns (ResEmpty);
  // 试穿协议
  rpc TryOn(ReqTryOn) returns (ResEmpty);
  // 查询账户信息
  rpc FetchAccount(ReqFetchAccount) returns (ResFetchAccount);
  // 心的爱心便当相关协议
  // 获取玩家的活动信息
  rpc ActivityBianDangFetchCurrent(ReqEmpty) returns(ResActivityBianDangFetchCurrent);
  // 保存当前桌面
  rpc ActivityBianDangSaveCurrent(ReqActivityBianDangSaveCurrent) returns(ResEmpty);
  // 领取桌子拼满的奖励
  rpc ActivityBianDangReceiveRewards(ReqActivityBianDangReceiveRewards) returns (ResActivityBianDangReceiveRewards);
  // 抽取食材
  rpc ActivityBianDangOpenChest(ReqEmpty) returns(ResActivityBianDangOpenChest);

  // 获取当前进行中的活动列表
  rpc FetchActivityList(ReqEmpty) returns(ResFetchActivityList);
  // 获取当前活动任务状态
  rpc FetchActivityTasks(ReqEmpty) returns(ResFetchActivityTasks);
  // 领取活动任务奖励
  rpc ReceiveActivityTaskReward(ReqReceiveActivityTaskReward) returns(ResReceiveActivityTaskReward);
  
  // 签到活动
  // 获取玩家的活动信息
  rpc ActivityQianDaoFetchCurrent(ReqActivityQianDaoFetchCurrent) returns(ResActivityQianDaoFetchCurrent);
  // 领取当天奖励
  rpc ActivityQianDaoReceiveRewards(ReqActivityQianDaoReceiveRewards) returns (ResActivityQianDaoReceiveRewards);
  // 修改赛季数据查看权限
  rpc ModifySeasonStatisticPermission(ReqModifySeasonStatisticPermission) returns (ResEmpty);
  // 获取可用的支付平台
  rpc GetValidPaymentPlatform(ReqEmpty) returns (ResGetValidPaymentPlatform);
}
message ReqReceiveAchievementReward {
  uint32 achievement_id = 1;
}
message ResReceiveAchievementReward {
  repeated Item rewards = 1;
}

message ReqReceiveAchievementLevelReward {
  uint32 level = 1;
  uint32 all = 2;
}
message ResReceiveAchievementLevelReward {
  repeated Item rewards = 1;
}

message AccountLevelCompute {
  uint32 id = 1; // 段位编号
  uint32 score = 2; // 段位分数
}

message AccountLevelChange {
  // 变化类型 1=保持原段位 2=段位升级 3=段位降级
  uint32 type = 1;

  AccountLevelCompute origin = 2; // 原来的段位
  AccountLevelCompute final = 3; // 变化后的段位

  // 变化原因 1=不能加分 2=不能扣分 3=不能升段 4=不能降段 5=当前赛季已经锁定 6=已经是最高段位
  // 1-4是策划配置的
  uint32 reason = 4;
}

// 账号的段位更新变化
message AccountLevelModify {
  uint32 season_id = 1; // !! 更新的段位的赛季ID，如果没有，说明没有段位变化，后续字段都为空或者0
  int32 game_score_modify = 2; // 对局变更胜场点数（-1/1）
  int32 extra_score_modify = 3; // 额外奖励胜场点数（0/1）
  AccountLevel origin = 4; // 原始段位
  AccountLevel final = 5; // 最终段位
  repeated AccountLevelChange changes = 6; // 变化过程 加进度和升段是独立的2种数据
}

message NotifyAccountGameEnd {
  AccountLevelModify level_modify = 1; // 段位更新数据
  uint32 character_exp_modify = 2;
  uint32 character_final_exp = 3;
  //  repeated AccountLevel final_level = 3; 迁移到AccountLevelModify结构中
  //  repeated Item item_modify = 4; // 删除，是个无用字段
  GameChestProgressUpdate chest_progress = 5;
  int64 origin_gold = 6; // 原始金币数量（客户端动画需要）
  int64 modify_gold = 7; // 变化的金币数量（客户端动画需要）
  int64 tips_gold = 8; // 场代金币数量（是正数）
  string uuid = 9;
  uint32 game_create_time = 10;    // 对局创建时间
  uint32 game_end_time = 11;       // 对局结束时间
  uint32 settlement_end_time = 12; // 结算完毕时间
}

message ReqMakeCraft {
  uint32 id = 1;
}

message ResFetchItemIdMap {
  message IdData {
    uint32 number_id = 1;
    string string_id = 2;
  }
  repeated IdData id_map = 1;
}

message ReqChangeMainCharacter {
  uint32 character_id = 1;
}
message ResChangeMainCharacter {
  uint32 head_image_state = 1; // 0=无 1=正在生成图片 10=完成图片 99=出错
  string avatar_png = 2; // 头像图片地址 head_image_state=10 时有效
  uint32 bust_image_state = 3; 
  string bust_png = 4; 
}

message ReqSaveSkinGroup {
  message SkinItem {
    uint32 type = 1;
    uint32 res_id = 2;
  }

  uint32 character_id = 1;
  uint32 group_id = 2;
  repeated SkinItem items = 3;
  string name = 4;
}

message ReqChangeUsedSkinGroup {
  uint32 character_id = 1;
  uint32 group_id = 2;
}
message ResChangeUsedSkinGroup {
  uint32 head_image_state = 1; // 0=无 1=正在生成图片 10=完成图片 99=出错
  string avatar_png = 2; // 头像图片地址 head_image_state=10 时有效
  uint32 bust_image_state = 3; 
  string bust_png = 4; 
}

message ReqCreateNickname {
  string nickname = 1;
}

message ReqModifyNickname {
  string nickname = 1;
  string use_item_id = 2;
}

message ReqModifyAvatarId {
  uint32 avatar_id = 1;
}

message ReqModifyTitleId {
  uint32 title_id = 1;
}

message ReqModifyFrameId {
  uint32 frame_id = 1;
}

message NotifyAccountUpdate {
  AccountUpdate update = 1;
}

message AccountLevelUpdate {
  repeated AccountLevel levels = 1;
}

message AccountResourceUpdate {
  uint32 id = 1;
  int64 final = 2;
  uint32 update_time = 3;
}

message AccountBasicUpdate {
  // 固定结构，所有字段必发
  string nickname = 1;
  uint32 avatar_id = 2;
  uint32 title_id = 3;
  uint32 frame_id = 4;
  string avatar_png = 5;
  uint32 likes = 6;
  uint32 ban_state = 7;
  string binded_mail = 8;
  bool mail_valid = 9;
  string bust_png = 10;
}

message AccountFriendUpdate {
  repeated uint32 friend = 1;
  repeated AccountFriendRequest apply_request = 2;
}

message AccountMailUpdate {
  repeated Mail mails = 1;
}

message AccountDailyTaskUpdate {
  repeated BaseTaskProgress progresses = 1;
}

message AccountAchievementUpdate {
  repeated AchievementProgress achievement_progresses = 1;
  repeated AchievementLevelProgress level_progresses = 2;
}

message AccountSettingUpdate {
  uint32 achievement_permission = 1;
  uint32 comment_permission = 2;
  uint32 brief_season_permission = 3;
}

message AccountMiscUpdate {
  repeated SosCoinData sos_coin = 1;
  repeated ShopRecord shop_record = 2;
  repeated PickupRecord pickup_record = 3;
}


message AccountCharacterUpdate {
  uint32 character_id = 1;
  uint32 exp = 2;
//  uint32 rewarded_level = 3;
  repeated uint32 rewarded_levels = 4;
}

message AccountCharacterSkinUpdate {
  uint32 character_id = 1;
  uint32 current_skin_group = 2;
  repeated CharacterSkinGroup skin_groups = 3;
}

message AccountMainCharacterUpdate {
  uint32 character_id = 1;
}

message AccountRewardedSuiteUpdate {
  repeated uint32 rewarded_suites = 1;
}

message AccountSeasonStatisticUpdate {
  repeated AccountSeasonStatistic season_statistics = 1;
}

message AccountMallUpdate {
  uint32 accumulate_value = 1;
  uint32 vip = 2;
  repeated uint32 received_vip_rewards = 3;
  repeated GoodsRecord currency = 4;
  repeated GoodsRecord package = 5;
  repeated GoodsRecord month_ticket = 6;
}

message AccountQuickPhraseUpdate {
  uint32 character_id = 1;
  QuickPhrase quick_phrase = 2;
}

message AccountDecorationUpdate {
  uint32 lobby_background = 1;
  uint32 game_background = 2;
  EffectGroup effects = 3;
  CardFaceGroup card_faces = 4;
}

message AccountBattlePassUpdate {
  uint32 battle_pass_id = 1;
  uint32 paid_version = 2;
  uint32 level = 3;
  uint32 exp = 4;
  uint32 week_exp = 5;
  AccountBattlePassRewards rewards = 6;
  repeated AccountBattlePassTask tasks = 7;
}

message AccountUpdate {
  AccountBasicUpdate basic = 1;
  AccountLevelUpdate level = 2;
  repeated AccountResourceUpdate resource_updates = 3;
  AccountFriendUpdate friend = 4;
  AccountMailUpdate mail = 5;
  AccountDailyTaskUpdate daily_task = 6;
  AccountMiscUpdate misc = 7;
  repeated AccountCharacterUpdate character = 8;
  repeated AccountCharacterSkinUpdate character_skin = 9;
  AccountMainCharacterUpdate main_character = 10;
  AccountRewardedSuiteUpdate rewarded_suite = 11;
  AccountAchievementUpdate achievement = 12;
  AccountSettingUpdate setting = 13;
  AccountSeasonStatisticUpdate season_statistic = 14;
  AccountMallUpdate mall = 15;
  repeated AccountQuickPhraseUpdate quick_phrase = 16;
  AccountDecorationUpdate decoration = 17;
  AccountBattlePassUpdate battle_pass = 18;
  repeated AccountFreePackage free_packages = 19;
  repeated ActivityTask activity_tasks = 20;
  repeated AccountSeasonRewards season_rewards = 21;
}
message ReqFetchAccountBrief {
  repeated uint32 accounts = 1; // 账号ID列表
  uint32 level = 2;
}

message ResFetchAccountBrief {
  repeated BytesBrief briefs = 1; // 以AccountBrief1结构序列化的数据
}

message BytesBrief {
  bytes basic_brief = 1;
  bytes season_summaries = 2;
}

message ReqAddFriendRequest {
  uint32 account_id = 1;
}

message ReqApplyFriendRequest {
  repeated uint32 account_id_list = 1;
  uint32 result = 2;
  uint32 type = 3; // 1-单个添加（服务端只处理list中的第一项） 2-批量添加
}

message ResApplyFriendRequest {
  repeated uint32 success_list = 1;
  uint32 state = 2; // 只在批量处理时返回这个状态 1-未溢出 2-已溢出
}

message ReqRemoveFriend {
  uint32 account_id = 1;
}

message NotifyFriendModify {
  uint32 new_friend = 1;
  uint32 removed_friend = 2;
}

message ResQueryGame {
  bool in_gaming = 1;
}

message ResAuthGame {
}

message ResFetchMailList {
  AccountMail mails = 1;
}

message ReqFetchMailDetail {
  repeated uint32 mail_id_list = 1;
}

message ResFetchMailDetail {
  repeated MailDetail detail = 1;
}

message ReqReadMail {
  uint32 mail_id = 1;
}

message ReqRecvMailAttachment {
  repeated uint32 mail_list = 1;
}

message ResRecvMailAttachment {
  repeated Item items = 1;
}

message ReqDeleteMail {
  repeated uint32 mail_list = 1;
}

message ResFetchDailyTaskList {
  AccountDailyTask progresses = 1;
}

message ReqReceiveDailyTaskReward {
  uint32 task_id = 1;
  uint32 all = 2; // 1-领取全部 0-领取单个任务
}

message ResReceiveDailyTaskReward {
  repeated Item rewards = 1;
}

message ReqReceiveSosCoin {
  uint32 id = 1;
}

message ResReceiveSosCoin {
  repeated Item rewards = 1;
}

message ReqReadAnnouncement {
  uint32 id = 1;
}

message ResFetchAnnouncementList {
  repeated Announcement ann = 1;
}

message ReqBuyFromShop {
  uint32 id = 1;
  uint32 count = 2;
}

message ResBuyFromShop {
  repeated Item items = 1;
  repeated SkinGroup skin_groups = 2; // 抽到的镜子转化为套装后的结果
}

message ReqExchangeFromShop {
  uint32 rule_id = 1;  // 1-兑换同级染料 2-兑换高级染料 3-兑换高级布匹
  repeated Item items = 2;
}

message ResExchangeFromShop {
  repeated Item items = 1;
}

message ReqFetchLeaderboard {
  uint32 offset = 1;
  uint32 category = 2;
}

message ResFetchLeaderboard {
  repeated uint32 account_list = 1;
  uint32 self_rank = 2;
}

message NotifyFriendState {
  AccountOnlineState friend = 1;
}

message NotifyFriendInfoUpdate {
  uint32 account_id = 1;
}

message ReqFetchFriendState {
  repeated uint32 accounts = 1; // 账号ID列表（最多10个）
}

message ResFetchFriendState {
  repeated AccountOnlineState friends = 1;
}

message ReqDeleteSkinGroup {
  uint32 group_id = 1;
  uint32 character_id = 2;
}

message ResDeleteSkinGroup {
  uint32 current_use_group_id = 1;
}

message ReqReceiveCharacterLevelRewards {
//  uint32 level = 1; // 需要领取到的等级，例：当前1，请求10，则领取2-10的所有奖励
  repeated uint32 level_list = 1;
  uint32 character_id = 2;
}

message ResReceiveCharacterLevelRewards {
  repeated Item rewards = 1;
}

message ResFetchGameDevShuffles {
  repeated GameDevShuffle shuffles = 1;
}

message ReqFetchActiveChest {
  uint32 version = 1;
}

message ResFetchActiveChest {
  message ChestData {
    uint32 chest_id = 1;
    uint32 end_time = 2;
  }
  repeated ChestData chests = 1;
}

message ReqFetchChest {
  uint32 chest_id = 1;
}
message ResFetchChest {
  bool use_new = 1; // 1=使用必new 0=不使用
  repeated uint32 pickup_items = 2; // 必new道具列表，资源ID形式，需要客户端转换
  uint32 next_double = 3;
}

message ReqOpenChest {
  uint32 chest_id = 1;
  uint32 count = 2;
  uint32 ticket_id = 3; // 是否使用单抽券 0=不使用，使用填单抽券ID
  uint32 ticket_count = 4; // 单抽券的使用数量
  string pickup_items_hash = 5; // pickup_items 的hash
}

message SkinGroup {
  repeated Item skins = 1;
}

message ResOpenChest {
  repeated Item rewards = 1;
  repeated SkinGroup skin_groups = 2; // 抽到的镜子转化为套装后的结果
  uint32 shop_currency_id = 5; // 保底货币种类，
  uint32 shop_currency_num = 6; // 保底货币数量，表示每一抽的保底数
}

message ReqFetchGiftBoxRewards {
  uint32 res_id = 1; // 礼盒的resource_id
}
message ResFetchGiftBoxRewards {
  repeated Item rewards = 1;
}

message ReqOpenGiftBox {
  uint32 res_id = 1; // 礼盒的resource_id
  uint32 count = 2; // 开启的礼盒数量
}
message ResOpenGiftBox {
  repeated Item rewards = 1;
}

// 玩家的赛季结果
message AccountSeasonResult {
  uint32 season_id = 1;
  uint32 start_time = 2;
  uint32 end_time = 3;
  uint32 level_id = 4;
  uint32 season_type = 5;
  uint32 season_state = 6; // 赛季状态 1=运行中 2=结算中 3=已结束
  uint32 confirm_state = 7; // 新赛季弹窗确认 0=未弹 1=已弹
  uint32 receive_state = 8; // 奖励是否领取 0=未领取 1=已领取
  uint32 template_id = 9; // 模版ID
}

message ReqFetchSeasonInfo {
}

message ResFetchSeasonInfo {
  repeated AccountSeasonResult seasons = 1;
}

message ReqReceiveSeasonReward {
  uint32 season_id = 1;
  uint32 reward_id = 2;
}

message ResReceiveSeasonReward {
  repeated Item rewards = 1;
}

message ReqConfirmSeason {
  uint32 season_id = 1;
}

message ResConfirmSeason {
}

message ReqFetchMatchStat {
  repeated uint32 match_id_list = 1;
}
message ResFetchMatchStat {
  message MatchData {
    uint32 match_id = 1;
    uint32 count = 2;
  }
  repeated MatchData matches = 1;
}

message AccountGameRecord {
  string uuid = 1;
  uint32 number = 2;     // 第几小局，友人房中才有
  uint32 camp = 3;       // 阵营 1=地主 2=农民
  bool win = 4;
  uint64 start_time = 5; // 毫秒
  uint64 end_time = 6;
  bool open_hand = 7;    // 是否明牌
  uint32 play_mode = 8;  // 1=洗牌，2=不洗牌 3=天地癞子
  uint32 match_id = 9;   // 匹配ID
  uint32 category = 10;  // 1=友人房 2=排位
  uint32 Multiple = 11;  // 倍率
  int64 currency = 12;   // 铜币得失
}

message ReqRecentGameRecordList {
}

message ResRecentGameRecordList {
  repeated AccountGameRecord records = 1;
}

message ReqFavoriteGameRecordList {
}

message ResFavoriteGameRecordList {
  repeated AccountGameRecord records = 1;
}

message ReqGameRecordDetail {
  string uuid = 1;
  uint32 number = 2;
  uint32 account_id = 3; // 分享者的ID，不是分享的为空
}

message  ResGameRecordDetail {
  bytes data = 1;
}

message ReqAddFavoriteGameRecord {
  string uuid = 1;
  uint32 number = 2;
}

message ReqDeleteFavoriteGameRecord {
  string uuid = 1;
  uint32 number = 2;
}

message ReqShareGameRecord {
  string uuid = 1;
  uint32 number = 2;
}

message ReqFetchOBToken {
  string uuid = 1;
}

message ResFetchOBToken {
  string token = 1;
  uint32 create_time = 2;
  uint32 delay = 3;
  uint32 start_time = 4;
}

message ReqFetchGameLiveList {
  uint32 filter_id = 1;
}

message ReqObserve {
  string uuid = 1;
}

message GameLiveHead {
  string uuid = 1;
  uint32 start_time = 2;
  repeated PlayerSnapshot players = 3;

  message GameConfig {
    uint32 category = 1;
    GameMeta meta = 2;
    GameRule rule = 3;
  }
  GameConfig game_config = 4;
}

message ResFetchGameLiveList {
  repeated GameLiveHead game_list = 1;
}

message ReqUserComplain {
  uint32 target_id = 1;
  uint32 type = 2;
}

message ReqFetchClientValue {
  string key = 1;
}

message ResFetchClientValue {
  message ClientValue {
    string key = 1;
    string value = 2;
  }
  repeated ClientValue values = 1;
}

message ReqSetClientValue {
  string key = 1;
  string value = 2;
}

message ReqDelClientValue {
  repeated string keys = 1;
}

message ReqReceiveSuiteReward {
  uint32 suite_id = 1;
}

message ResReceiveSuiteReward {
  repeated Item rewards = 1;
}

message ReqReceiveGiftCodeReward {
  string code = 1;
}

message ResReceiveGiftCodeReward {
  repeated Item rewards = 1;
}

message ReqPlayCharacterVoice {
  uint32 character_id = 1;
  uint32 voice_id = 2;
}

message ResSaveSkinGroup {
  uint32 head_image_state = 1; // 0=无 1=正在生成图片 10=完成图片 99=出错
  string avatar_png = 2; // 头像图片地址 head_image_state=10 时有效
  uint32 bust_image_state = 3; 
  string bust_png = 4; 
}

message ReqRecordFetchHeadImage {
  uint32 target_id = 1;
  string target_png = 2;
}
message ResRecordFetchHeadImage {
  string newest_png = 3;
}

message ReqRecordFetchBustImage {
  uint32 target_id = 1;
  string target_png = 2;
}
message ResRecordFetchBustImage {
  string newest_png = 3;
}


message ReqModifyAchievementPermission {
  uint32 achievement_permission = 1; // 0-所有人可留言 1-仅好友可留言 2-仅自己
}

message ReqFetchAccountAllAchievement {
  uint32 account_id = 1;
}
message ResFetchAccountAllAchievement {
  AccountAchievement account_achievement = 1;
}

message ReqUpvote {
  uint32 target_id = 1; // 目标id
  string uuid = 2; // 对局id
}
message NotifyUpvote {
  uint32 target_id = 1; // 目标id
  string uuid = 2; // 对局id
  uint32 source_id = 3; // 点赞人id
}

message NotifyChangePassword {
}

message ReqUpdateSeason {
}

message ReqFetchServerTime {
}

message ResFetchServerTime {
  int64 time = 1; // 服务器时间 单位毫秒
}

message ReqReceiveVipReward {
  uint32 vip = 1; // vip等级
}

message ResReceiveVipReward {
  repeated Item rewards = 1;
}

message ReqFetchAccountComment {
  uint32 account_id = 1;
}

message ResFetchAccountComment {
  uint32 permission = 1;  // 0-所有人可留言 1-仅好友可留言 2-仅自己
  repeated Comment comments = 2;
}

message ReqAddComment {
  uint32 target_id = 1;
  WordStock comment = 2;
  uint32 emo_id = 3;
}

message ReqDelComment {
  repeated int64 auto_id = 1;
}

message ReqModifyCommentPermission {
  uint32 permission = 1;
}

message ReqSaveQuickPhrase {
  uint32 chara_id = 1;
  uint32 phrase_id = 2;
  WordStock quick_phrase = 3;
}

message ReqDelQuickPhrase {
  uint32 chara_id = 1;
  uint32 phrase_id = 2;
}

message ReqModifyProfileBackground {
  uint32 res_id = 1;
}

message ReqSaveDecoration {
  uint32 save_type = 1;
  uint32 lobby_background = 2;
  uint32 game_background = 3;
  EffectGroup effects = 4;
  CardFaceGroup card_faces = 5;
}

message ReqReceiveBattlePassReward {
  repeated uint32 levels = 1;
}

message ResReceiveBattlePassReward {
  repeated Item rewards = 1;
}

message ReqReceiveBattlePassTaskReward {
  uint32 task_id = 1;
  uint32 all = 2;
}

message ResReceiveBattlePassTaskReward {
  repeated Item rewards = 1;
}

message ReqReceiveFreePackage {
  uint32 id = 1;
}

message ResReceiveFreePackage {
  repeated Item rewards = 1;
}

message NotifyTestBroadcast {
  string Content = 1;//内容
}

message ReqBindMailEmail {
  string email = 1;
}

message ResBindMailEmail {
  string token = 1;
}

message ReqBindMail {
  string token = 1;
  string code = 2;
  string password = 3;
}

message NotifyKickoutOffline {
  uint32 reason = 1;//原因：0:停服维护 1:客户端有更新
  bool force=2;//是否强制
}


message ReqReadGuide {
}

message ReqTryOn {
  message SkinItem {
    uint32 type = 1;
    uint32 res_id = 2;
  }
  uint32 character_id = 1;
  repeated SkinItem items = 2;
}

message ReqFetchAccount {
  repeated uint32 type = 1; // 模块类型  1-resourceBag 2-Mall
}

message ResFetchAccount {
  AccountBag bag = 1;
  AccountMall mall = 2; // 商店购买信息
}

message ActivityBianDangFood {
  uint32 id = 1;
  uint32 location_x = 2;
  uint32 location_y = 3;
}
message ResActivityBianDangFetchCurrent {
  uint32 table_id = 1;
  repeated ActivityBianDangFood foods = 2;
  repeated uint32 received = 3;
}
message ResActivityBianDangReceiveRewards {
  repeated Item rewards = 1;
}
message ReqActivityBianDangSaveCurrent {
  uint32 table_id = 1;
  repeated ActivityBianDangFood foods = 2;
}

message ResActivityBianDangOpenChest {
  repeated Item rewards = 1;
}

message ActivityTask {
  uint32 id = 1;
  uint32 activity_id = 2;
  uint32 progress = 3;
  uint32 achieved = 4;
  uint32 rewarded = 5;
}

message ResFetchActivityTasks{
  repeated ActivityTask tasks = 1;
}

message ReqReceiveActivityTaskReward {
  uint32 id = 1;
}

message ResReceiveActivityTaskReward {
  repeated Item rewards = 1;
}

message Activity {
  uint32 id = 1;
  uint32 start_time = 2;
  uint32 end_time = 3;
}

message ResFetchActivityList{
  repeated Activity activities = 1;
}

message ReqActivityBianDangReceiveRewards {
  uint32 table_id = 1;
}

message ReqActivityQianDaoFetchCurrent {
  uint32 activity_id = 1;
}

message ResActivityQianDaoFetchCurrent {
  uint32 day = 1; // 已领天数
  uint32 last_receive_time = 2;
}

message ReqActivityQianDaoReceiveRewards {
  uint32 activity_id = 1;
}

message ResActivityQianDaoReceiveRewards {
  repeated Item rewards = 1;
}

message ReqModifySeasonStatisticPermission {
  uint32 permission = 1;
}

message ResGetValidPaymentPlatform {
  repeated PaymentPlatformConfig platforms = 1;
}
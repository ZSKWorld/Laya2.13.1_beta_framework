/**The script is automatically generated by BatMain.bat , please do not modify */

type CfgData<T> = { [P in keyof T]: T[P] }[keyof T];
interface CfgExtension<T> {
	forEach(callbackfn: (value: T, index: number, array: T[]) => void, thisArg?: any): void;
	filter(predicate: (value: T, index: number, array: T[]) => boolean, thisArg?: any): T[];
	find(predicate: (value: T, index: number, array: T[]) => boolean, thisArg?: any): T;
	every(predicate: (value: T, index: number, array: T[]) => boolean, thisArg?: any): boolean;
	findIndex(predicate: (value: T, index: number, obj: T[]) => boolean, thisArg?: any): number;
	includes(searchElement: T, fromIndex?: number): boolean;
	indexOf(searchElement: T, fromIndex?: number): number;
	lastIndexOf(searchElement: T, fromIndex?: number): number;
	map<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): U[];
	reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U;
	slice(start?: number, end?: number): T[];
	some(predicate: (value: T, index: number, array: T[]) => boolean, thisArg?: any): boolean;
}

declare interface ICfgManager {
	init():void;
#vars#}